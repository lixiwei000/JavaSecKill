<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 配置Spring整合Mybatis过程 -->
    <!-- 1.配置数据库相关参数 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 2.数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${username}"/>
        <property name="password" value="${password}"/>

        <!-- c3p0连接池的私有属性 -->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <property name="autoCommitOnClose" value="false"/><!-- 默认是false,当关闭connection的时候不要commit -->
        <property name="checkoutTimeout" value="1000"/><!-- 获取连接超时时间 -->
        <property name="acquireRetryAttempts" value="2"/><!-- 获取连接失败重试次数 -->
    </bean>
    <!-- 约定大于配置 -->
    <!-- 3.配置SqlSessionFactory会话工厂 mybatis最终要的api,用来创建sqlSession -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池(真正整合Spring和Mybatis) -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置Mybatis全局配置文件 : mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描Entity包,使用别名 cn.edu.ncut.model.SeckillObj -> SeckillObj-->
        <property name="typeAliasesPackage" value="cn.edu.ncut.model"/>
        <!-- 扫描sql配置文件: mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
     </bean>
    <!-- 4.配置扫描Dao接口包,动态实现Dao接口 ,并注入到spring容器中(最能节省工作量的一个配置) 不需要自己配置Dao接口到xml的映射了-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <!-- 为什么使用BeanName而不直接用SqlSessionFactory?
            因为在Scanner启动时,jdbc可能还没有被加载,那么dataSource就是错误的,
            所以使用BeanName这种后处理的方式,用到时再加载,防止提前处理sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出扫描Dao接口包 -->
        <property name="basePackage" value="cn.edu.ncut.dao"/>
    </bean>
</beans>